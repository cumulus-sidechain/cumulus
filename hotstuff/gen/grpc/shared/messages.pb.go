// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shared/messages.proto

package shared

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Signature struct {
	RawSignature         []byte   `protobuf:"bytes,1,opt,name=rawSignature,proto3" json:"rawSignature,omitempty"`
	Signer               uint32   `protobuf:"varint,2,opt,name=signer,proto3" json:"signer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{0}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetRawSignature() []byte {
	if m != nil {
		return m.RawSignature
	}
	return nil
}

func (m *Signature) GetSigner() uint32 {
	if m != nil {
		return m.Signer
	}
	return 0
}

type AggregatedSignatures struct {
	RawAggregatedSignature []byte   `protobuf:"bytes,1,opt,name=rawAggregatedSignature,proto3" json:"rawAggregatedSignature,omitempty"`
	Signers                []byte   `protobuf:"bytes,2,opt,name=signers,proto3" json:"signers,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *AggregatedSignatures) Reset()         { *m = AggregatedSignatures{} }
func (m *AggregatedSignatures) String() string { return proto.CompactTextString(m) }
func (*AggregatedSignatures) ProtoMessage()    {}
func (*AggregatedSignatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{1}
}

func (m *AggregatedSignatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedSignatures.Unmarshal(m, b)
}
func (m *AggregatedSignatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedSignatures.Marshal(b, m, deterministic)
}
func (m *AggregatedSignatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedSignatures.Merge(m, src)
}
func (m *AggregatedSignatures) XXX_Size() int {
	return xxx_messageInfo_AggregatedSignatures.Size(m)
}
func (m *AggregatedSignatures) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedSignatures.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedSignatures proto.InternalMessageInfo

func (m *AggregatedSignatures) GetRawAggregatedSignature() []byte {
	if m != nil {
		return m.RawAggregatedSignature
	}
	return nil
}

func (m *AggregatedSignatures) GetSigners() []byte {
	if m != nil {
		return m.Signers
	}
	return nil
}

// This is the content of the block; its hash is signed for votes
type Block struct {
	ChainID              string               `protobuf:"bytes,1,opt,name=chainID,proto3" json:"chainID,omitempty"`
	Height               uint64               `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	PreviousBlockHash    []byte               `protobuf:"bytes,3,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Payload              []byte               `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Qc                   *QuorumCertificate   `protobuf:"bytes,6,opt,name=qc,proto3" json:"qc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{2}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetChainID() string {
	if m != nil {
		return m.ChainID
	}
	return ""
}

func (m *Block) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetPreviousBlockHash() []byte {
	if m != nil {
		return m.PreviousBlockHash
	}
	return nil
}

func (m *Block) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Block) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Block) GetQc() *QuorumCertificate {
	if m != nil {
		return m.Qc
	}
	return nil
}

// A block proposal is a Block augmented with some additional data
type ProposedBlock struct {
	ProposerID           uint32     `protobuf:"varint,1,opt,name=ProposerID,proto3" json:"ProposerID,omitempty"`
	ViewNumber           uint32     `protobuf:"varint,2,opt,name=ViewNumber,proto3" json:"ViewNumber,omitempty"`
	Block                *Block     `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	ProposerSignature    *Signature `protobuf:"bytes,4,opt,name=proposerSignature,proto3" json:"proposerSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProposedBlock) Reset()         { *m = ProposedBlock{} }
func (m *ProposedBlock) String() string { return proto.CompactTextString(m) }
func (*ProposedBlock) ProtoMessage()    {}
func (*ProposedBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{3}
}

func (m *ProposedBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposedBlock.Unmarshal(m, b)
}
func (m *ProposedBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposedBlock.Marshal(b, m, deterministic)
}
func (m *ProposedBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposedBlock.Merge(m, src)
}
func (m *ProposedBlock) XXX_Size() int {
	return xxx_messageInfo_ProposedBlock.Size(m)
}
func (m *ProposedBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposedBlock.DiscardUnknown(m)
}

var xxx_messageInfo_ProposedBlock proto.InternalMessageInfo

func (m *ProposedBlock) GetProposerID() uint32 {
	if m != nil {
		return m.ProposerID
	}
	return 0
}

func (m *ProposedBlock) GetViewNumber() uint32 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *ProposedBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *ProposedBlock) GetProposerSignature() *Signature {
	if m != nil {
		return m.ProposerSignature
	}
	return nil
}

// A finalized block is a Block augmented with signatures from consensus nodes
type FinalizedBlock struct {
	Block                *Block                `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	ProposerSignature    *AggregatedSignatures `protobuf:"bytes,3,opt,name=proposerSignature,proto3" json:"proposerSignature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FinalizedBlock) Reset()         { *m = FinalizedBlock{} }
func (m *FinalizedBlock) String() string { return proto.CompactTextString(m) }
func (*FinalizedBlock) ProtoMessage()    {}
func (*FinalizedBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{4}
}

func (m *FinalizedBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinalizedBlock.Unmarshal(m, b)
}
func (m *FinalizedBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinalizedBlock.Marshal(b, m, deterministic)
}
func (m *FinalizedBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalizedBlock.Merge(m, src)
}
func (m *FinalizedBlock) XXX_Size() int {
	return xxx_messageInfo_FinalizedBlock.Size(m)
}
func (m *FinalizedBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalizedBlock.DiscardUnknown(m)
}

var xxx_messageInfo_FinalizedBlock proto.InternalMessageInfo

func (m *FinalizedBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *FinalizedBlock) GetProposerSignature() *AggregatedSignatures {
	if m != nil {
		return m.ProposerSignature
	}
	return nil
}

type QuorumCertificate struct {
	BlockHash            []byte                `protobuf:"bytes,1,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	AggregatedSignatures *AggregatedSignatures `protobuf:"bytes,2,opt,name=aggregatedSignatures,proto3" json:"aggregatedSignatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *QuorumCertificate) Reset()         { *m = QuorumCertificate{} }
func (m *QuorumCertificate) String() string { return proto.CompactTextString(m) }
func (*QuorumCertificate) ProtoMessage()    {}
func (*QuorumCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e57dabda91f43ef4, []int{5}
}

func (m *QuorumCertificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuorumCertificate.Unmarshal(m, b)
}
func (m *QuorumCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuorumCertificate.Marshal(b, m, deterministic)
}
func (m *QuorumCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumCertificate.Merge(m, src)
}
func (m *QuorumCertificate) XXX_Size() int {
	return xxx_messageInfo_QuorumCertificate.Size(m)
}
func (m *QuorumCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumCertificate proto.InternalMessageInfo

func (m *QuorumCertificate) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

func (m *QuorumCertificate) GetAggregatedSignatures() *AggregatedSignatures {
	if m != nil {
		return m.AggregatedSignatures
	}
	return nil
}

func init() {
	proto.RegisterType((*Signature)(nil), "flow.shared.messages.Signature")
	proto.RegisterType((*AggregatedSignatures)(nil), "flow.shared.messages.AggregatedSignatures")
	proto.RegisterType((*Block)(nil), "flow.shared.messages.Block")
	proto.RegisterType((*ProposedBlock)(nil), "flow.shared.messages.ProposedBlock")
	proto.RegisterType((*FinalizedBlock)(nil), "flow.shared.messages.FinalizedBlock")
	proto.RegisterType((*QuorumCertificate)(nil), "flow.shared.messages.QuorumCertificate")
}

func init() { proto.RegisterFile("shared/messages.proto", fileDescriptor_e57dabda91f43ef4) }

var fileDescriptor_e57dabda91f43ef4 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x5d, 0x8e, 0xd3, 0x30,
	0x10, 0x96, 0xcb, 0xb6, 0xd0, 0xd9, 0x16, 0x69, 0xad, 0xb2, 0x8a, 0x16, 0xc4, 0x56, 0x79, 0xa1,
	0x42, 0xc8, 0x15, 0x8b, 0x04, 0xbc, 0xb2, 0x20, 0x7e, 0x1e, 0x40, 0x60, 0x10, 0x42, 0x3c, 0x20,
	0x39, 0xa9, 0xeb, 0x58, 0x24, 0x75, 0xd6, 0x76, 0x88, 0xe0, 0x16, 0x1c, 0x80, 0x43, 0x71, 0x17,
	0x0e, 0x80, 0x62, 0x27, 0x69, 0x51, 0x8d, 0x04, 0x8f, 0x33, 0xf3, 0xcd, 0x37, 0xdf, 0x7c, 0x33,
	0x70, 0xcd, 0x64, 0x4c, 0xf3, 0xd5, 0xb2, 0xe0, 0xc6, 0x30, 0xc1, 0x0d, 0x29, 0xb5, 0xb2, 0x0a,
	0xcf, 0xd6, 0xb9, 0xaa, 0x89, 0xaf, 0x91, 0xae, 0x76, 0x72, 0x2a, 0x94, 0x12, 0x39, 0x5f, 0x3a,
	0x4c, 0x52, 0xad, 0x97, 0x56, 0x16, 0xdc, 0x58, 0x56, 0x94, 0xbe, 0x2d, 0x7e, 0x06, 0xe3, 0xb7,
	0x52, 0x6c, 0x98, 0xad, 0x34, 0xc7, 0x31, 0x4c, 0x34, 0xab, 0xfb, 0x38, 0x42, 0x73, 0xb4, 0x98,
	0xd0, 0x3f, 0x72, 0xf8, 0x18, 0x46, 0x46, 0x8a, 0x0d, 0xd7, 0xd1, 0x60, 0x8e, 0x16, 0x53, 0xda,
	0x46, 0x71, 0x06, 0xb3, 0x47, 0x42, 0x68, 0x2e, 0x98, 0xe5, 0xab, 0x1e, 0x6e, 0xf0, 0x7d, 0x38,
	0xd6, 0xac, 0x0e, 0x94, 0x5a, 0xf6, 0xbf, 0x54, 0x71, 0x04, 0x97, 0x3d, 0xb3, 0x71, 0x83, 0x26,
	0xb4, 0x0b, 0xe3, 0x5f, 0x08, 0x86, 0xe7, 0xb9, 0x4a, 0x3f, 0x37, 0x98, 0x34, 0x63, 0x72, 0xf3,
	0xe2, 0x89, 0x23, 0x1b, 0xd3, 0x2e, 0x6c, 0x54, 0x66, 0x5c, 0x8a, 0xcc, 0xba, 0xe6, 0x03, 0xda,
	0x46, 0xf8, 0x0e, 0x1c, 0x95, 0x9a, 0x7f, 0x91, 0xaa, 0x32, 0x8e, 0xe2, 0x39, 0x33, 0x59, 0x74,
	0xc9, 0xf1, 0xef, 0x17, 0xf0, 0x43, 0x18, 0xf7, 0x7e, 0x45, 0x07, 0x73, 0xb4, 0x38, 0x3c, 0x3b,
	0x21, 0xde, 0x51, 0xd2, 0x39, 0x4a, 0xde, 0x75, 0x08, 0xba, 0x05, 0x37, 0xca, 0x4a, 0xf6, 0x35,
	0x57, 0x6c, 0x15, 0x0d, 0xbd, 0xfa, 0x36, 0xc4, 0x0f, 0x60, 0x70, 0x91, 0x46, 0x23, 0x47, 0x76,
	0x8b, 0x84, 0x8e, 0x46, 0xde, 0x54, 0x4a, 0x57, 0xc5, 0x63, 0xae, 0xad, 0x5c, 0xcb, 0x94, 0x59,
	0x4e, 0x07, 0x17, 0x69, 0xfc, 0x13, 0xc1, 0xf4, 0xb5, 0x56, 0xa5, 0x32, 0x7c, 0xe5, 0xd7, 0xbf,
	0x09, 0xd0, 0x26, 0x74, 0xeb, 0xc0, 0x94, 0xee, 0x64, 0x9a, 0xfa, 0x7b, 0xc9, 0xeb, 0x57, 0x55,
	0x91, 0xf4, 0xe7, 0xda, 0xc9, 0xe0, 0xbb, 0x30, 0x4c, 0x1a, 0x22, 0x67, 0xc0, 0xe1, 0xd9, 0xf5,
	0xb0, 0x1a, 0x37, 0x8b, 0x7a, 0x24, 0x7e, 0xd9, 0xf8, 0xe7, 0x07, 0x6c, 0x0f, 0xe9, 0x9d, 0x39,
	0x0d, 0xb7, 0xf7, 0x30, 0xba, 0xdf, 0x19, 0xff, 0x40, 0x70, 0xf5, 0xa9, 0xdc, 0xb0, 0x5c, 0x7e,
	0xeb, 0x96, 0xea, 0x45, 0x0d, 0xfe, 0x59, 0xd4, 0x87, 0x90, 0x28, 0xbf, 0xd3, 0xed, 0x70, 0x7b,
	0xe8, 0x53, 0x43, 0xfa, 0xbe, 0x23, 0x38, 0xda, 0xbb, 0x06, 0xbe, 0x01, 0xe3, 0xa4, 0x7f, 0x1e,
	0xff, 0xc5, 0xdb, 0x04, 0xfe, 0x04, 0x33, 0x16, 0xa0, 0x6f, 0xf7, 0xf9, 0x1f, 0x41, 0x41, 0x9e,
	0xf3, 0x2b, 0x1f, 0x47, 0xbe, 0x3b, 0x19, 0xb9, 0x1f, 0xbc, 0xf7, 0x3b, 0x00, 0x00, 0xff, 0xff,
	0x1a, 0x5b, 0x25, 0xc5, 0x12, 0x04, 0x00, 0x00,
}
